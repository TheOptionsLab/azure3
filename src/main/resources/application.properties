# ===============================
# = DATA SOURCE
# ===============================

spring.datasource.url = jdbc:mysql://172.30.57.244:3306/audenty
spring.datasource.username = root
spring.datasource.password = password
spring.datasource.maxActive=2

# Set here configurations for the database connection

# Connection url for the database "netgloo_blog"
#spring.datasource.url = jdbc:mysql://localhost:3306/audenty?useSSL=false
#spring.datasource.url = dbc:google:mysql://node-141412:us-east1:dispatch:3306/audenty?useSSL=false
#spring.datasource.url = jdbc:mysql://node-141412:us-east1:dispatch:3306/audenty?useSSL=false

#spring.datasource.url = jdbc:mysql://us-cdbr-azure-southcentral-f.cloudapp.net:3306/acsm_dee5a6cebb6e6d8?serverTimezone=EST
#spring.datasource.username = b28cbdb0a9063b
#spring.datasource.password = 6932251c
#spring.datasource.maxActive=2

#spring.datasource.url = jdbc:mysql://google/audenty?cloudSqlInstance=node-141412:us-east1:dispatch&socketFactory=com.google.cloud.sql.mysql.SocketFactory&user=root&password=Ilove$cancun1&useSSL=false
#spring.datasource.username = root
#spring.datasource.password = Ilove$cancun1
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1


db.driver=com.mysql.jdbc.GoogleDriver
#db.url=jdbc:google:mysql://hedgeoption:cloudb/dispatch
db.url=jdbc:google:mysql://node-141412:us-east1:dispatch:3306/audenty
db.username=root
db.password=Ilove$cancun1
hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect

#node-141412:us-east1:dispatch


# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
